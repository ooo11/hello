doctype html
html
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
    title= `${title}`

    link(rel='stylesheet', href='/public/css/bootstrap.min.css')
    link(rel='stylesheet', href='/public/css/styles.css')

  body

  
block content


block scripts
    script(src="/public/vendor/js/angular.min.js")
    script(src="/public/vendor/js/angular-filter.js")
    script(src="/public/vendor/js/alasql.min.js")
    script(src="/public/vendor/js/jszip.js")
    script(src="/public/vendor/js/xlsx.js")
    script(src="http://underscorejs.org/underscore-min.js")

    //-code to select data for table
    script.

      //this to extrect link data from the express(routers/index.js)
      var links = '#{data}';
      //-console.log(links);

      //- var underscore = angular.module('underscore', []);
      //- underscore.factory('_', ['$window', function($window) {
      //-   return $window._; // assumes underscore has already been loaded on the page
      //- }]);
      

      var app = angular.module('myApp', ['angular.filter','underscore']);
       
       app.filter("groupBy",["$parse","$filter",function($parse,$filter){
          return function(array,groupByField){
            var result	= [];
                    var prev_item = null;
                    var groupKey = false;
                    var filteredData = $filter('orderBy')(array,groupByField);
                    for(var i=0;i<filteredData.length;i++){
                      groupKey = false;
                      if(prev_item !== null){
                        if(prev_item[groupByField] !== filteredData[i][groupByField]){
                          groupKey = true;
                        }
                      } else {
                        groupKey = true;  
                      }
                      if(groupKey){
                        filteredData[i]['group_by_key'] =true;  
                      } else {
                        filteredData[i]['group_by_key'] =false;  
                      }
                      result.push(filteredData[i]);
                      prev_item = filteredData[i];
                      //- console.log(prev_item);
                    }
                    return result;
                    
          }
        }]);

      
                  

        app.factory("MyService", function($http) {
            return {
                fdata: function() {
                    return $http.get(links).then(function(response) {
                        return response.data;
                    });
                }
            }
        });

        

    //- all function fpr the angular goes here
    //- using app test to check new fuc for sending new list!
    script(src="/public/custom/js/apptest.js") 

    
 

